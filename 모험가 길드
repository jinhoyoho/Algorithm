n = int(input())
scary = list(map(int, input().split()))

scary.sort()
group = list()
i = result = 0 #총 그룹의 수

while i < n: 
    group.append(scary[i])

    if(max(group) == len(group)): 
        #그룹의 최댓값과 갯수가 같으면 -> 그룹 결성 완료
        result += 1
        group = list() #그룹 초기화
    
    i += 1

print(result)

#그리디 알고리즘을 활용하여 푼 문제이다. 공포도를 오름차순으로 정렬한 후 공포도에 속한 그룹의 개수와 최댓값이 같으면 그룹이 결성된 것이므로 while과 if문을 통해서 코드를 작성하였다.
<해설 답안>
n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0 #총 그룹의 수
count = 0 #현재 그룹에 포함된 모험가의 수

for i in data: #공포도를 낮은 것부터 하나씩 확인하여
    count += 1 #현재그룹에 해당 모험가를 포함시키기
    if count >= i: #현재 그룹에 포함된 모험가의 수가 현재 공포도의 이상이라면, 그룹 결성
    result += 1 #총 그룹 수 증가
    count = 0 #현재 모험가수 초기화
    
print(result) #총 그룹의 수 출력
