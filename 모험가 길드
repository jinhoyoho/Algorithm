n = int(input())
scary = list(map(int, input().split()))

scary.sort()
group = list()
i = result = 0 #총 그룹의 수

while i < n: 
    group.append(scary[i])

    if(max(group) == len(group)): 
        #그룹의 최댓값과 갯수가 같으면 -> 그룹 결성 완료
        result += 1
        group = list() #그룹 초기화
    
    i += 1

print(result)

#그리디 알고리즘을 활용하여 푼 문제이다. 공포도를 오름차순으로 정렬한 후 공포도에 속한 그룹의 개수와 최댓값이 같으면 그룹이 결성된 것이므로 while과 if문을 통해서 코드를 작성하였다.
#나는 그룹의 갯수를 len을 통해서 구했지만 해설에서는 낮은 순으로 넣으면 포함이 되기 때문에 count 값을 1 증가 시키므로써 갯수를 구하였다.
#최댓값은 i로 표현하였다. i의 값은 data가 정렬되어있기 때문에 현재 공포도의 최댓값을 i로 표현할 수 있다. 따라서 i가 count의 값보다 작거나 같으면 그룹이 결성될 조건을 만족했다고
할 수 있으므로 해설에는 for문을 이용하여 표현한 것 같다.

<해설 답안>
n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0 #총 그룹의 수
count = 0 #현재 그룹에 포함된 모험가의 수

for i in data: #공포도를 낮은 것부터 하나씩 확인하여
    count += 1 #현재그룹에 해당 모험가를 포함시키기
    if count >= i: #현재 그룹에 포함된 모험가의 수가 현재 공포도의 이상이라면, 그룹 결성
    result += 1 #총 그룹 수 증가
    count = 0 #현재 모험가수 초기화
    
print(result) #총 그룹의 수 출력
