def find_parent(parent, x):
    if parent[x] != x:
        parent[x] = find_parent(parent, parent[x])
    return parent[x]

def union_parent(parent, a, b):
    a = find_parent(parent, a)
    b = find_parent(parent, b)

    if a < b: #a가 더 작으면
        parent[b] = a #a를 부모 노드로
    else:
        parent[a] = b

v, e = map(int, input().split()) #정점과 간선 개수
parent = [0] * (v+1)
for i in range(1, v+1):
    parent[i] = i

cycle = False #순환 여부

for i in range(e):
    a, b = map(int, input().split())
    #순환이 발생한 경우
    if find_parent(parent, a) == find_parent(parent, b):
        cycle = True
        break
    else:
        union_parent(parent, a, b)

if cycle:
    print("사이클 발생")
else:
    print("사이클 발생x")
