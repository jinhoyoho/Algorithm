n = int(input())
data = list(map(int, input().split()))
data.sort()

result = i = 0

while True :
    result += 1
    i = result #i는 1부터 ~
    j = n-1 #j는 n-1부터 0까지

    while j >= 0:
        if i >= data[j]:
            i -= data[j]
        j -= 1
        
    if i > 0:
        break

print(result)

# 생각보다 너무 복잡하게 푼 문제같다. 솔직히 내 풀이가 맞는지도 잘 모르겠다.
# 동전의 개수를 n으로 받아주고 동전의 값을 for문으로 각각 받아준다. result, i, j라는 변수를 이용하여 중첩 while문과 if문으로 값을 구하였다.
# i는 1부터 만들 수 없는 값까지 나오도록 설정하였고, j는 data list의 index로써 n-1부터 0까지 되도록 설정하였다. result는 답으로 설정하였다.
# data의 값을 정렬시켜놓고 큰 수 부터 i의 값이 더 크면 빼도록 조건문을 설정하였다. i가 0이 되는 순간 그 금액을 만들 수 있는 것이므로 그 금액을 최솟값으로 설정하였다.
# if문과 while문이 중첩되게 코드를 작성하여서 너무 안 좋은 풀이같다.

<문제 해설>
n = int(input())
data = list(map(int, input().split()))
data.sort()

target = 1
for x in data:
    #만들 수 없는 금액을 찾았을 때 반복 종료
    if target < x:
        break
    target += x
    
#만들 수 없는 금액 출력
print(target)

#문제를 해결하는 방식이 비슷하다가 구현쪽에서 살짝 빗겨나갔다. target(내 코드에선 result)값을 만들 수 있는지 for문을 이용하여 확인한다.
# 만들 수 있다면 우리는 target - 1 까지의 금액을 모두 만들 수 있다는 말과 같다.
# (도대체 어떻게 이런 풀이를 생각할 수 있을까...)
