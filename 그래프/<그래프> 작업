##########
위상정렬 알고리즘 사용
##########

from collections import deque
import sys
input = sys.stdin.readline

n = int(input())
graph = [[] for _ in range(n+1)] #1번부터 n번까지 그래프
q = deque() #(노드번호, 시간)을 담을 큐
indegree = [0] * (n+1) #1번부터 n번까지 진입차수 0

for i in range(1, n+1):
    info = list(input().split()) #정보 저장
    graph[i].append(int(info[0])) #시간 저장
    for node in info[2:]:
        graph[int(node)].append(i)
        indegree[i] += 1
    #첫번째 인수는 해당 노드를 처리하는 시간, 두번째부터는 처리해야만 하는 노드 번호
result = 0 #시간 0
q = deque() #큐

for i in range(1, n+1):
    if indegree[i] == 0: #0인 진입차수
        q.append(i) #노드번호 저장

while q:
    node_list = deque() #빈 노드 리스트
    while q:
        node_list.append(q.popleft()) #큐 복사

    while node_list:
        node = node_list.popleft() #하나씩 빼기
        graph[node][0] -= 1 #시간 빼기
        
        if graph[node][0] == 0: #시간이 0이면
            for element in graph[node][1:]: #노드 넣기
                indegree[element] -= 1
                if indegree[element] == 0:
                    q.append(element)
                    
        else: #처리해야한다면
            q.append(node)
    
    result += 1

print(result)
