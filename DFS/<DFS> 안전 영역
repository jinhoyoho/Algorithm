import sys
sys.setrecursionlimit(100000)
input = sys.stdin.readline

def dfs(x, y):
    if x <= -1 or x >=n or y <= -1 or y >= n:
        return False
    if safety_sector[x][y] == 0:
        safety_sector[x][y] = 1 #방문처리
        dfs(x-1, y)
        dfs(x+1, y)
        dfs(x, y-1)
        dfs(x, y+1)
        return True
    return False

n = int(input()) #N*N
graph = [[] * n for _ in range(n)] #N*N 그래프 생성
max_value = 0 #최댓값

for i in range(n):
    num = list(map(int, input().split())) #수 리스트 저장
    max_value = max(max_value, max(num))
    graph[i] = num #저장

result = 0

for rain in range(max_value + 1): #비가 0부터 max_value까지 온다면
    safety_sector = [[0] * n for _ in range(n)]
    count = 0
    for i in range(n):
        for j in range(n):
            if graph[i][j] <= rain: #비가 더 많이 오면
                safety_sector[i][j] = 1 #잠김
    for i in range(n):
        for j in range(n):
            if dfs(i, j) == True:
                count += 1

    result = max(result, count)
        
print(result)
