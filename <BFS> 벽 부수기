from collections import deque

n, m = map(int, input().split())
graph = []
for _ in range(n):
    graph.append(list(map(int, input())))

dx = [0, 0, 1, -1]
dy = [1, -1, 0, 0]

def bfs(x, y):
    queue = deque()
    queue.append((x, y))
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            #밖을 벗어나는 경우
            if nx <= -1 or nx >= n or ny <= -1 or ny >= m:
                continue
            #벽을 부수자! -> 수정요청
            #갈 수 있는 경우
            if graph[nx][ny] == 0:
                graph[nx][ny] = graph[x][y] + 1
                #좌표발견
                if nx == n and ny == m:
                    break
                queue.append((nx, ny))
    return graph[n-1][m-1]

result = bfs(1, 1)
print(graph)
print(result)            
