n, m = map(int, input().split())
weight = list(map(int, input().split()))

result = 0

for i in range(m):
    n -= weight.count(i) # 남은 갯수
    result += weight.count(i) * n #해당 무게 갯수 * 남은 수의 갯수

print(result)

#규칙을 구하니 쉽게 풀리는 문제였다. 해당 무게가 나올 수 있는 경우의 수는 전체의 개수에서 해당 무게까지의 개수를 제외한 나머지와 해당 개수를 곱하는 것이다.
#n과 m으로 볼링공의 개수와 최대 무게를 받아주고 weight로 무게를 각각 받아준다. range의 값을 무게인 m까지 설정한다.
#남은 개수는 n에서 weight.count(i)를 빼주면 된다. 결과값은 (i의 개수 * 남은 수의 개수)를 계속 더해주면 된다.

<문제 해설>
n, m = map(int, input().split())
data = list(map(int, input().split()))

#1부터 10까지의 무게를 담을 수 있는 리스트
array = [0] * 11

for x in data:
    #각 무게에 해당하는 볼링공의 개수 카운트
    array[x] += 1
    
result = 0
#1부터 m까지의 각 무게에 대하여 처리
for i in range(1, m+1) :
    n -= array[i] #무게가 i인 볼링공의 개수(A가 선택할 수 있는 개수) 제외
    result += array[i] * n #B가 선택하는 경우의 수와 곱하기
    
print(result)


#해설에서는 array를 통해서 무게의 개수를 구했다. 나는 내장된 count 함수를 이용하여서 개수를 구했다. 나머지는 해설과 비슷하다.
