def find_parent(parent, x):
    #루트노드가 아니면 루트노드를 찾을때까지 재귀적으로 호출
    if parent[x] != x:
        #경로 압축 기법
        parent[x] = find_parent(parent, parent[x]) #호출과 동시에 저장
    return parent[x]

def union_parent(a, b):
    a = find_parent(parent, a)
    b = find_parent(parent, b)
    if a < b: #a가 더 작은 수라면
        parent[b] = a
    else:
        parent[a] = b #연결

v, e = map(int, input().split())
parent = [0] * (v+1)

for i in range(1, v+1):
    parent[i] = i #부모 초기화

for i in range(e):
    a, b = map(int, input().split())
    union_parent(a, b)
    print('각 원소가 속한 집합:', end=' ')
    
for i in range(1, v+1):
    print(find_parent(parent, i), end = ' ')

print("부모 테이블:", end = ' ')
for i in range(1, v+1):
    print(parent[i], end = ' ')
    
