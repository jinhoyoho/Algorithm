n = int(input()) 
result = list() #만들고자 하는 result list
for _ in range(n):
    result.append(int(input()))

op = list() #+, -를 저장하는 리스트
compare = list() #stack에서 나온 결과를 저장하는 리스트
stack = list() #stack
idx = 0 #시작 인덱스

for i in range(1, n+1):
    #숫자가 다르다면
    stack.append(i) #stack에 저장
    op.append("+")

    if i == result[idx]: #숫자가 같다면
        if not stack: #비어있다면
            break
        else: #비어있지 않다면
            compare.append(stack.pop()) #stack에서 out
            op.append('-')
            idx += 1 #인덱스 증가
            
            while stack and result[idx] == stack[-1] : #만약 다음 value가 스택 맨 위의 값과 같다면
                compare.append(stack.pop())
                op.append('-')
                idx += 1
                if not stack:
                    break
                
if compare == result: #결과가 같다면
    for i in op:
        print(i)
else:
    print("NO")



#모범답안
n = int(input())
stack = []
answer = []
flag = 0
cur = 1
for i in range(n):
    num = int(input())
    while cur <= num:       # 입력한 수를 만날 때 까지 오름차순으로 push
        stack.append(cur)
        answer.append("+")
        cur += 1
    # 입력한 수를 만나면 while문 탈출. 즉 cur = num일 때 까지 while문을 돌아 스택을 쌓는다.

    if stack[-1] == num:    # stack의 TOP이 입력한 숫자와 같다면
        stack.pop()         # 스택의 TOP을 꺼내 수열을 만들어 준다.
        answer.append("-")
    else:                   # stack의 TOP이 입력한 수가 아니면 주어진 스택을 만들 수 없다.
        print("NO")         # 왜냐하면 12345 처럼 오름차순으로 스택이 입력되는데
        flag = 1            # TOP이 num보다 크면 num은 TOP보다 더 아래에 쌓여있기 때문이다.
        break               

if flag == 0:
    for i in answer:
        print(i)
