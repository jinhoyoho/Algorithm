from collections import deque 
import sys
input = sys.stdin.readline

def bfs(x, y):
    visited[x][y] = True #방문처리
    queue = deque() #큐 생성
    queue.append((x, y)) #좌표 넣기
    count = 1 #영역세기

    while queue:
        x, y = queue.popleft() #큐에 있는 좌표 빼기
        for i in range(4): #상하좌우 탐색
            nx, ny = x + dx[i] , y + dy[i]

            if 0 <= nx < m and 0<= ny < n: #영역 안에 있고
                if not visited[nx][ny] and graph[nx][ny] == 1: #방문하지 않았고 빈 영역이면
                    visited[nx][ny] = True #방문처리
                    count += 1 #영역 증가
                    queue.append((nx, ny))
                
    return count

m, n, k = map(int, input().split()) #세로, 가로, 직사각형 개수 입력
graph = [[1] * n for _ in range(m)] #n*m graph
visited = [[False] * n for _ in range(m)] #방문 로그 저장

for _ in range(k): #좌표 입력
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(m-y2, m-y1): #(m-y2)부터 (m-1-y1)까지
        for j in range(x1, x2): #(x1)부터 (x2-1)까지 
            graph[i][j] = 2 #범위의 사각형 색칠

result = list() #결과를 담을 리스트

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1] #상하좌우 탐색

for i in range(m):
    for j in range(n):
        if graph[i][j] == 1 and not visited[i][j]:
            result.append(bfs(i,j))

print(len(result))
result.sort()
print(" ".join(str(result[i]) for i in range(len(result))))
