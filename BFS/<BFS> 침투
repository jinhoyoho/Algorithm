import sys
input = sys.stdin.readline
from collections import deque

m, n = map(int, input().split()) #세로, 가로 입력
graph = [list(input().rstrip()) for _ in range(m)] #그래프 입력
visited = [[False] * n for _ in range(m)] #방문기록

dx = [-1, 0, 1, 0] 
dy = [0, 1, 0, -1] #상하좌우 탐색

def bfs(y, x): #bfs(세로, 가로)
    visited[y][x] = True #방문처리
    queue = deque()
    queue.append((y, x)) #좌표 입력
    while queue:
        y, x = queue.popleft()
        for i in range(4):
            ny = y + dy[i]
            nx = x + dx[i]
            if -1 < ny < m and -1 < nx < n and not visited[ny][nx] and graph[ny][nx] == '0': #전류가 통한다면
                graph[ny][nx] = 2 #그래프 방문
                visited[ny][nx] = True #방문처리
                queue.append((ny, nx))

for i in range(n):
    bfs(0, i) #bfs실행

if 2 in graph[m-1]:
    print("YES")
else:
    print("NO")
