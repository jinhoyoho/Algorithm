import sys
input = sys.stdin.readline
INF = 1e9

n, m = map(int, input().split()) #노드 및 간선개수
graph = [[INF] * (n+1) for _ in range(n+1)] #2차원 리스트로 만들어진 graph
for a in range(1, n+1):
    for b in range(1, n+1):
        if a == b: #자기 자신이라면
            graph[a][b] = 0 #비용 0으로 초기화

for _ in range(m):
    a, b, c = map(int, input().split()) #a에서 b로 갈 때 드는 비용 c
    graph[a][b] = c

#플로이드 워셜 알고리즘
for k in range(1, n+1):
    for a in range(1, n+1):
        for b in range(1, n+1):
            graph[a][b] = min(graph[a][b], graph[a][k] + graph[k][b])

for a in range(1, n+1):
    for b in range(1, n+1):
        if graph[a][b] == INF:
            print("INF", end = ' ')
        else:
            print(graph[a][b], end = ' ')
    print()

#시간복잡도가 O(n^3)인 3중 반복문 알고리즘이다.
따라서 범위를 잘 보면서 풀 수 있어야 한다.
