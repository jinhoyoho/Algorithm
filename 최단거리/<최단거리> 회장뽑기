import sys
input = sys.stdin.readline
INF = 1e9

n = int(input()) #노드 개수
graph = [[INF] * (n+1) for _ in range(n+1)] #n+1 그래프

while True:
    u, v = map(int, input().split()) #친구 사이 입력
    if u == -1 and v == -1: #-1 두개 입력
        break
    graph[u][v] = 1
    graph[v][u] = 1 #친구사이

for i in range(1, n+1):
    for j in range(1, n+1):
        if i == j:
            graph[i][j] = 0 #같은 사람

for k in range(1, n+1):
    for i in range(1, n+1):
        for j in range(1, n+1):
            graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])

result_set = [set() for _ in range(n+1)] #n+1개의 집합 생성
for i in range(1, n+1):
    for j in range(1, n+1):
        result_set[i].add(graph[i][j])

result_score = INF #결과
result = []

for i in range(1, n+1):
    min_value = max(result_set[i])
    if min_value < result_score: #최소값이 변경되거나 같으면
        if len(result) != 0: #비어있지 않으면
            result = list() #초기화
        result.append(i) #인덱스 저장
        result_score = min_value
    elif min_value == result_score:
        result.append(i)

print(result_score, len(result))
print(" ".join(str(value) for value in result))
