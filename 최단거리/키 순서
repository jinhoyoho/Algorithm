########
플로이드 워셜 알고리즘 사용
########

import sys
input = sys.stdin.readline
INF = 9876543210

n, m = map(int, input().split()) #노드, 간선 입력
graph = [[INF] * (n+1) for _ in range(n+1)]
for i in range(1, n+1):
    for j in range(1, n+1):
        #자기 자신은 0
        if i == j:
            graph[i][j] = 0
for _ in range(m): #m개의 간선
    a, b = map(int, input().split()) #a에서 b로 가는 그래프
    graph[a][b] = 1 #거리는 1로 설정

#플로이드 워셜 알고리즘
for k in range(1, n+1):
    for i in range(1, n+1):
        for j in range(1, n+1):
            graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])
    
result = 0 #키 순서를 아는 학생 수

for i in range(1, n+1):
    token = 0 #갈 수 있는 경우, 없는 경우 판별
    for j in range(1, n+1):
        #i에서 j로 갈 수 없는 경우
        if graph[i][j] >= INF:
            #j에서 i도 갈 수 없는 경우
            if graph[j][i] >= INF:
                token = 1 
    #갈 수 있어야 +1
    if token == 0:
        result += 1
print(result)
